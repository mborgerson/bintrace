name: Build
on: [push, pull_request]
jobs:
  ubuntu:
    name: Build on Ubuntu
    runs-on: ubuntu-22.04
    steps:
      - name: Clone repo
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v2
      - name: Setup Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v2
        with:
          python-version: '3.8'
      - name: Install dependencies
        run: |
          sudo apt install ninja-build ccache flatbuffers-compiler libflatbuffers-dev
          pip install angr pylint
      - name: Initialize compiler cache
        id: cache
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: /tmp/ccache
          key: cache-${{ github.sha }}
          restore-keys: cache-
      - name: Install bintrace
        run: |
          export CCACHE_DIR=/tmp/ccache
          export CCACHE_MAXSIZE=512M
          export PATH="/usr/lib/ccache:$PATH"
          git config --global user.name 'Tester'
          git config --global user.email 'nobody@nowhere'

          export WHEELS=~/wheels
          mkdir -p $WHEELS
          export PIP_FIND_LINKS=$WHEELS

          # Build and install from wheel for tests
          pip install build

          python -m build --outdir $WHEELS
          pip install $WHEELS/bintrace-*.whl

      - name: Install bintrace-qemu
        run: |
          export WHEELS=~/wheels
          export PIP_FIND_LINKS=$WHEELS

          python -m build --outdir $WHEELS ./bintrace-qemu
          pip install $WHEELS/bintrace_qemu-*.whl

          echo -e "\nCompiler Cache Stats:"
          ccache -s -c
      - name: Lint
        run: |
          # Build in-place for pylint. This is done after the isolated build to
          # prevent artifacts from polluting the dists
          # python -m build doesn't appear to support in-place build
          python setup.py build

          pylint --rcfile=pylintrc ./bintrace
      - name: Test
        run: |
          cd tests
          python -m unittest

  macos:
    name: Build on macOS
    runs-on: macos-latest
    steps:
      - name: Clone repo
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v2
      - name: Setup Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v2
        with:
          python-version: '3.8'
      - name: Install dependencies
        run: brew install flatcc flatbuffers
      - name: Install
        run: pip install .
